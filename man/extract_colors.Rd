% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_colors.R
\name{extract_colors}
\alias{extract_colors}
\title{Extract colors from Windows BMP, JPEG, PNG, and TIFF format bitmap images.}
\usage{
extract_colors(file, exclude_col = NULL, exclude_rad = NULL,
  top_n = NULL, min_share = NULL, get_stats = TRUE)
}
\arguments{
\item{file}{path to a bitmap image.}

\item{exclude_col}{vector of colors to be excluded from the analysis. The built-in colors (see \code{colors()}) and/or
hex color codes can be used.}

\item{exclude_rad}{numeric vector with blurring of the colors to be excluded. Corresponds to a maximum spherical distance
in the RGB color space (the dimensions range from 0 to 255). If \code{is.null}, only the exact colors are excluded.
If input is of length 1, the same blurring is applied to all elements of \code{exclude_col}.}

\item{top_n}{display the most frequent colors.}

\item{min_share}{display the colors with a minimum percentage of all pixels (0-1).}

\item{get_stats}{if \code{TRUE}, absolute and relative frequency of the colors are also included in the response.}
}
\value{
If \code{get_stats} is set to \code{FALSE} a \code{character vector} containing the hex color codes is returned. Otherwise,
   a \code{data.frame} (\code{tibble::tibble}) is returned with the following columns:
\itemize{
\item \code{col_hex} hex color code.
\item \code{col_freq} absolute frequency of the color.
\item \code{col_share} relative frequency of the color.
}
}
\description{
\code{extract_colors} extract colors from Windows BMP, JPEG, PNG, and TIFF format bitmap images.
}
